<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="https://github.com/ARCOS-System/ARCOS/XSD"
           xmlns="https://github.com/ARCOS-System/ARCOS/XSD"
           xmlns:common="https://github.com/ARCOS-System/ARCOS/XSD/Common"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           version="0.3.1">

  <xs:annotation>
    <xs:documentation>
      Domain-agnostic post-processor report.
      Minimal envelope with ProjectID, OverallStatus, required Summary, optional Diagnostics,
      optional ProducedArtifacts, and an optional DomainReportArtifact for domain-specific detail.
      No provenance beyond ProjectID; domain schema/vocab/rules remain in ARCOSProject.
    </xs:documentation>
  </xs:annotation>

  <xs:import namespace="https://github.com/ARCOS-System/ARCOS/XSD/Common" schemaLocation="Common.xsd"/>

  <!-- ================= Root ================= -->
  <xs:element name="PostProcessorReport" type="PostProcessorReportType"/>

  <xs:complexType name="PostProcessorReportType">
    <xs:sequence>
      <xs:element name="ProjectID" 				type="xs:string"/>
      <xs:element name="OverallStatus" 			type="OverallStatusEnum"/>
      <xs:element name="Summary" 				type="SummaryType"/>
      <xs:element name="Diagnostics" 			type="DiagnosticsType" 			 minOccurs="0"/>
      <xs:element name="ProducedArtifacts" 		type="ProducedArtifactsType" 	 minOccurs="0"/>
      <!-- single optional hook for domain-specific structured payload -->
      <xs:element name="DomainReportArtifact" 	type="common:InlineArtefactType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="OverallStatusEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="success"/>
      <xs:enumeration value="failure"/>
      <xs:enumeration value="partial"/>
      <xs:enumeration value="skipped"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="CategoryType">
    <xs:restriction base="xs:string">
      <!-- neutral buckets; add more if needed -->
      <xs:enumeration value="schema"/>
      <xs:enumeration value="rules"/>
      <xs:enumeration value="structure"/>
      <xs:enumeration value="naming"/>
      <xs:enumeration value="checksum"/>
      <xs:enumeration value="packaging"/>
      <xs:enumeration value="other"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- =============== Summary (required) =============== -->
  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
      <xs:element name="Counts" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Diagnostics" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Total" type="xs:int"/>
                  <xs:element name="BySeverity" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Severity" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:attribute name="level" type="SeverityEnum" use="required"/>
                            <xs:attribute name="count" type="xs:int" use="required"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
				  <xs:element name="ByCategory" minOccurs="0">
					<xs:complexType>
					  <xs:sequence>
						<xs:element name="Category" maxOccurs="unbounded">
						  <xs:complexType>
							<xs:attribute name="name" type="CategoryType" use="required"/>
							<xs:attribute name="count" type="xs:int" use="required"/>
						  </xs:complexType>
						</xs:element>
					  </xs:sequence>
					</xs:complexType>
				  </xs:element>                  
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Artifacts" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Total" type="xs:int"/>
                  <xs:element name="ByRole" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Role" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:attribute name="name" type="xs:string" use="required"/>
                            <xs:attribute name="count" type="xs:int" use="required"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- =============== Diagnostics (optional) =============== -->
  <xs:simpleType name="SeverityEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="error"/>
      <xs:enumeration value="warning"/>
      <xs:enumeration value="info"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DiagnosticsType">
    <xs:sequence>
      <xs:element name="Diagnostic" type="DiagnosticType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="DiagnosticType">
    <xs:sequence>
      <xs:element name="Message" 		type="xs:string"/>
      <xs:element name="Target" 		type="TargetRefType" 	minOccurs="0"/>
      <xs:element name="Evidence" 		type="xs:string" 		minOccurs="0"/>
      <xs:element name="SuggestedFix" 	type="xs:string" 		minOccurs="0"/>
  	  <!-- Free-form domain payloads (optional) -->
      <xs:element name="Extras" minOccurs="0">
        <xs:complexType>
          <xs:sequence> <!-- accept any foreign-namespace elements -->
            <xs:any namespace="##other" processContents="lax" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" 		type="xs:string" 	use="optional"/>
    <xs:attribute name="severity" 	type="SeverityEnum" use="required"/>
    <xs:attribute name="category" 	type="CategoryType" use="optional"/>
    <xs:attribute name="code" 		type="xs:string" 	use="optional"/>
  </xs:complexType>

  <xs:complexType name="TargetRefType">
    <xs:sequence>
      <xs:element name="ArtifactKind" 	type="ArtifactKindEnum" minOccurs="0"/>
      <xs:element name="Path" 			type="xs:string" 		minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="ArtifactKindEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ProducerOutput"/>
      <xs:enumeration value="PostProcessorOutput"/>
      <xs:enumeration value="ARCOSProject"/>
      <xs:enumeration value="Other"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- =============== ProducedArtifacts (optional) =============== -->
  <xs:complexType name="ProducedArtifactsType">
    <xs:sequence>
      <xs:element name="Artifact" type="ProducedArtifactType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ProducedArtifactType">
    <xs:sequence>
      <!-- Agnostic envelope for a single produced file/payload -->
      <xs:element name="Name" 		type="xs:string"/>
      <xs:element name="Role" 		type="xs:string" 					minOccurs="0"/> <!-- e.g., "manifest", "binary", "doc" -->
      <xs:element name="Payload" 	type="common:InlineArtefactType" 	minOccurs="0"/>
      <xs:element name="Reference" 	type="xs:anyURI" 					minOccurs="0"/>
    </xs:sequence>
    <!-- Either embed Payload or give a Reference (or both) -->
  </xs:complexType>

</xs:schema>
